<?php
/**
 * FreightRateResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  UPS\TForceFreightRating
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Freight Rate
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * 
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.50
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace UPS\TForceFreightRating\TForceFreightRating;

use \ArrayAccess;
use \UPS\TForceFreightRating\ObjectSerializer;

/**
 * FreightRateResponse Class Doc Comment
 *
 * @category Class
 * @description Freight Rate Response Container.
 * @package  UPS\TForceFreightRating
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class FreightRateResponse implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'FreightRateResponse';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'response' => '\UPS\TForceFreightRating\TForceFreightRating\FreightRateResponseResponse',
        'rate' => '\UPS\TForceFreightRating\TForceFreightRating\FreightRateResponseRate[]',
        'freight_density_rate' => '\UPS\TForceFreightRating\TForceFreightRating\FreightRateResponseFreightDensityRate',
        'commodity' => '\UPS\TForceFreightRating\TForceFreightRating\FreightRateResponseCommodity[]',
        'total_shipment_charge' => '\UPS\TForceFreightRating\TForceFreightRating\FreightRateResponseTotalShipmentCharge',
        'billable_shipment_weight' => '\UPS\TForceFreightRating\TForceFreightRating\FreightRateResponseBillableShipmentWeight',
        'dimensional_weight' => '\UPS\TForceFreightRating\TForceFreightRating\FreightRateResponseDimensionalWeight',
        'service' => '\UPS\TForceFreightRating\TForceFreightRating\FreightRateResponseService',
        'guaranteed_indicator' => 'string',
        'minimum_charge_applied_indicator' => 'string',
        'alternate_rates_response' => '\UPS\TForceFreightRating\TForceFreightRating\FreightRateResponseAlternateRatesResponse[]',
        'time_in_transit' => '\UPS\TForceFreightRating\TForceFreightRating\FreightRateResponseTimeInTransit',
        'handling_units' => '\UPS\TForceFreightRating\TForceFreightRating\FreightRateResponseHandlingUnits',
        'quote_number' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'response' => null,
        'rate' => null,
        'freight_density_rate' => null,
        'commodity' => null,
        'total_shipment_charge' => null,
        'billable_shipment_weight' => null,
        'dimensional_weight' => null,
        'service' => null,
        'guaranteed_indicator' => null,
        'minimum_charge_applied_indicator' => null,
        'alternate_rates_response' => null,
        'time_in_transit' => null,
        'handling_units' => null,
        'quote_number' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'response' => 'Response',
        'rate' => 'Rate',
        'freight_density_rate' => 'FreightDensityRate',
        'commodity' => 'Commodity',
        'total_shipment_charge' => 'TotalShipmentCharge',
        'billable_shipment_weight' => 'BillableShipmentWeight',
        'dimensional_weight' => 'DimensionalWeight',
        'service' => 'Service',
        'guaranteed_indicator' => 'GuaranteedIndicator',
        'minimum_charge_applied_indicator' => 'MinimumChargeAppliedIndicator',
        'alternate_rates_response' => 'AlternateRatesResponse',
        'time_in_transit' => 'TimeInTransit',
        'handling_units' => 'HandlingUnits',
        'quote_number' => 'QuoteNumber'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'response' => 'setResponse',
        'rate' => 'setRate',
        'freight_density_rate' => 'setFreightDensityRate',
        'commodity' => 'setCommodity',
        'total_shipment_charge' => 'setTotalShipmentCharge',
        'billable_shipment_weight' => 'setBillableShipmentWeight',
        'dimensional_weight' => 'setDimensionalWeight',
        'service' => 'setService',
        'guaranteed_indicator' => 'setGuaranteedIndicator',
        'minimum_charge_applied_indicator' => 'setMinimumChargeAppliedIndicator',
        'alternate_rates_response' => 'setAlternateRatesResponse',
        'time_in_transit' => 'setTimeInTransit',
        'handling_units' => 'setHandlingUnits',
        'quote_number' => 'setQuoteNumber'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'response' => 'getResponse',
        'rate' => 'getRate',
        'freight_density_rate' => 'getFreightDensityRate',
        'commodity' => 'getCommodity',
        'total_shipment_charge' => 'getTotalShipmentCharge',
        'billable_shipment_weight' => 'getBillableShipmentWeight',
        'dimensional_weight' => 'getDimensionalWeight',
        'service' => 'getService',
        'guaranteed_indicator' => 'getGuaranteedIndicator',
        'minimum_charge_applied_indicator' => 'getMinimumChargeAppliedIndicator',
        'alternate_rates_response' => 'getAlternateRatesResponse',
        'time_in_transit' => 'getTimeInTransit',
        'handling_units' => 'getHandlingUnits',
        'quote_number' => 'getQuoteNumber'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['response'] = isset($data['response']) ? $data['response'] : null;
        $this->container['rate'] = isset($data['rate']) ? $data['rate'] : null;
        $this->container['freight_density_rate'] = isset($data['freight_density_rate']) ? $data['freight_density_rate'] : null;
        $this->container['commodity'] = isset($data['commodity']) ? $data['commodity'] : null;
        $this->container['total_shipment_charge'] = isset($data['total_shipment_charge']) ? $data['total_shipment_charge'] : null;
        $this->container['billable_shipment_weight'] = isset($data['billable_shipment_weight']) ? $data['billable_shipment_weight'] : null;
        $this->container['dimensional_weight'] = isset($data['dimensional_weight']) ? $data['dimensional_weight'] : null;
        $this->container['service'] = isset($data['service']) ? $data['service'] : null;
        $this->container['guaranteed_indicator'] = isset($data['guaranteed_indicator']) ? $data['guaranteed_indicator'] : null;
        $this->container['minimum_charge_applied_indicator'] = isset($data['minimum_charge_applied_indicator']) ? $data['minimum_charge_applied_indicator'] : null;
        $this->container['alternate_rates_response'] = isset($data['alternate_rates_response']) ? $data['alternate_rates_response'] : null;
        $this->container['time_in_transit'] = isset($data['time_in_transit']) ? $data['time_in_transit'] : null;
        $this->container['handling_units'] = isset($data['handling_units']) ? $data['handling_units'] : null;
        $this->container['quote_number'] = isset($data['quote_number']) ? $data['quote_number'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['response'] === null) {
            $invalidProperties[] = "'response' can't be null";
        }
        if ($this->container['commodity'] === null) {
            $invalidProperties[] = "'commodity' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets response
     *
     * @return \UPS\TForceFreightRating\TForceFreightRating\FreightRateResponseResponse
     */
    public function getResponse()
    {
        return $this->container['response'];
    }

    /**
     * Sets response
     *
     * @param \UPS\TForceFreightRating\TForceFreightRating\FreightRateResponseResponse $response response
     *
     * @return $this
     */
    public function setResponse($response)
    {
        $this->container['response'] = $response;

        return $this;
    }

    /**
     * Gets rate
     *
     * @return \UPS\TForceFreightRating\TForceFreightRating\FreightRateResponseRate[]
     */
    public function getRate()
    {
        return $this->container['rate'];
    }

    /**
     * Sets rate
     *
     * @param \UPS\TForceFreightRating\TForceFreightRating\FreightRateResponseRate[] $rate rate
     *
     * @return $this
     */
    public function setRate($rate)
    {
        $this->container['rate'] = $rate;

        return $this;
    }

    /**
     * Gets freight_density_rate
     *
     * @return \UPS\TForceFreightRating\TForceFreightRating\FreightRateResponseFreightDensityRate
     */
    public function getFreightDensityRate()
    {
        return $this->container['freight_density_rate'];
    }

    /**
     * Sets freight_density_rate
     *
     * @param \UPS\TForceFreightRating\TForceFreightRating\FreightRateResponseFreightDensityRate $freight_density_rate freight_density_rate
     *
     * @return $this
     */
    public function setFreightDensityRate($freight_density_rate)
    {
        $this->container['freight_density_rate'] = $freight_density_rate;

        return $this;
    }

    /**
     * Gets commodity
     *
     * @return \UPS\TForceFreightRating\TForceFreightRating\FreightRateResponseCommodity[]
     */
    public function getCommodity()
    {
        return $this->container['commodity'];
    }

    /**
     * Sets commodity
     *
     * @param \UPS\TForceFreightRating\TForceFreightRating\FreightRateResponseCommodity[] $commodity commodity
     *
     * @return $this
     */
    public function setCommodity($commodity)
    {
        $this->container['commodity'] = $commodity;

        return $this;
    }

    /**
     * Gets total_shipment_charge
     *
     * @return \UPS\TForceFreightRating\TForceFreightRating\FreightRateResponseTotalShipmentCharge
     */
    public function getTotalShipmentCharge()
    {
        return $this->container['total_shipment_charge'];
    }

    /**
     * Sets total_shipment_charge
     *
     * @param \UPS\TForceFreightRating\TForceFreightRating\FreightRateResponseTotalShipmentCharge $total_shipment_charge total_shipment_charge
     *
     * @return $this
     */
    public function setTotalShipmentCharge($total_shipment_charge)
    {
        $this->container['total_shipment_charge'] = $total_shipment_charge;

        return $this;
    }

    /**
     * Gets billable_shipment_weight
     *
     * @return \UPS\TForceFreightRating\TForceFreightRating\FreightRateResponseBillableShipmentWeight
     */
    public function getBillableShipmentWeight()
    {
        return $this->container['billable_shipment_weight'];
    }

    /**
     * Sets billable_shipment_weight
     *
     * @param \UPS\TForceFreightRating\TForceFreightRating\FreightRateResponseBillableShipmentWeight $billable_shipment_weight billable_shipment_weight
     *
     * @return $this
     */
    public function setBillableShipmentWeight($billable_shipment_weight)
    {
        $this->container['billable_shipment_weight'] = $billable_shipment_weight;

        return $this;
    }

    /**
     * Gets dimensional_weight
     *
     * @return \UPS\TForceFreightRating\TForceFreightRating\FreightRateResponseDimensionalWeight
     */
    public function getDimensionalWeight()
    {
        return $this->container['dimensional_weight'];
    }

    /**
     * Sets dimensional_weight
     *
     * @param \UPS\TForceFreightRating\TForceFreightRating\FreightRateResponseDimensionalWeight $dimensional_weight dimensional_weight
     *
     * @return $this
     */
    public function setDimensionalWeight($dimensional_weight)
    {
        $this->container['dimensional_weight'] = $dimensional_weight;

        return $this;
    }

    /**
     * Gets service
     *
     * @return \UPS\TForceFreightRating\TForceFreightRating\FreightRateResponseService
     */
    public function getService()
    {
        return $this->container['service'];
    }

    /**
     * Sets service
     *
     * @param \UPS\TForceFreightRating\TForceFreightRating\FreightRateResponseService $service service
     *
     * @return $this
     */
    public function setService($service)
    {
        $this->container['service'] = $service;

        return $this;
    }

    /**
     * Gets guaranteed_indicator
     *
     * @return string
     */
    public function getGuaranteedIndicator()
    {
        return $this->container['guaranteed_indicator'];
    }

    /**
     * Sets guaranteed_indicator
     *
     * @param string $guaranteed_indicator This is an empty tag. The presence of the indicator indicates the rate returned is guaranteed.
     *
     * @return $this
     */
    public function setGuaranteedIndicator($guaranteed_indicator)
    {
        $this->container['guaranteed_indicator'] = $guaranteed_indicator;

        return $this;
    }

    /**
     * Gets minimum_charge_applied_indicator
     *
     * @return string
     */
    public function getMinimumChargeAppliedIndicator()
    {
        return $this->container['minimum_charge_applied_indicator'];
    }

    /**
     * Sets minimum_charge_applied_indicator
     *
     * @param string $minimum_charge_applied_indicator This is an empty tag. The presence of the tag indicates the rate returned has a minimum charge applied to it.
     *
     * @return $this
     */
    public function setMinimumChargeAppliedIndicator($minimum_charge_applied_indicator)
    {
        $this->container['minimum_charge_applied_indicator'] = $minimum_charge_applied_indicator;

        return $this;
    }

    /**
     * Gets alternate_rates_response
     *
     * @return \UPS\TForceFreightRating\TForceFreightRating\FreightRateResponseAlternateRatesResponse[]
     */
    public function getAlternateRatesResponse()
    {
        return $this->container['alternate_rates_response'];
    }

    /**
     * Sets alternate_rates_response
     *
     * @param \UPS\TForceFreightRating\TForceFreightRating\FreightRateResponseAlternateRatesResponse[] $alternate_rates_response alternate_rates_response
     *
     * @return $this
     */
    public function setAlternateRatesResponse($alternate_rates_response)
    {
        $this->container['alternate_rates_response'] = $alternate_rates_response;

        return $this;
    }

    /**
     * Gets time_in_transit
     *
     * @return \UPS\TForceFreightRating\TForceFreightRating\FreightRateResponseTimeInTransit
     */
    public function getTimeInTransit()
    {
        return $this->container['time_in_transit'];
    }

    /**
     * Sets time_in_transit
     *
     * @param \UPS\TForceFreightRating\TForceFreightRating\FreightRateResponseTimeInTransit $time_in_transit time_in_transit
     *
     * @return $this
     */
    public function setTimeInTransit($time_in_transit)
    {
        $this->container['time_in_transit'] = $time_in_transit;

        return $this;
    }

    /**
     * Gets handling_units
     *
     * @return \UPS\TForceFreightRating\TForceFreightRating\FreightRateResponseHandlingUnits
     */
    public function getHandlingUnits()
    {
        return $this->container['handling_units'];
    }

    /**
     * Sets handling_units
     *
     * @param \UPS\TForceFreightRating\TForceFreightRating\FreightRateResponseHandlingUnits $handling_units handling_units
     *
     * @return $this
     */
    public function setHandlingUnits($handling_units)
    {
        $this->container['handling_units'] = $handling_units;

        return $this;
    }

    /**
     * Gets quote_number
     *
     * @return string
     */
    public function getQuoteNumber()
    {
        return $this->container['quote_number'];
    }

    /**
     * Sets quote_number
     *
     * @param string $quote_number The Quote Number returned in the response associated to the specific LTL Freight Rate returned in the response.
     *
     * @return $this
     */
    public function setQuoteNumber($quote_number)
    {
        $this->container['quote_number'] = $quote_number;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
